package com.nc.pbackup;
// Generated Apr 16, 2019 9:30:41 AM by Hibernate Tools 5.2.10.Final

import java.io.Serializable;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * MUserRoles generated by hbm2java
 */
@Entity
@Table(name = "m_user_roles", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "nid"))
public class MUserRoles implements java.io.Serializable {

	private MUserRolesId id;
	private Long version;
	private MRole MRole;
	private MUser MUser;
	private long createdBy;
	private Date createdDate;
	private long updatedBy;
	private Date updatedDate;
	private Serializable nid;
	private String status;

	public MUserRoles() {
	}

	public MUserRoles(MUserRolesId id, MRole MRole, MUser MUser, long createdBy, Date createdDate, long updatedBy,
			Date updatedDate, Serializable nid, String status) {
		this.id = id;
		this.MRole = MRole;
		this.MUser = MUser;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
		this.nid = nid;
		this.status = status;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "roleId", column = @Column(name = "role_id", nullable = false)),
			@AttributeOverride(name = "userId", column = @Column(name = "user_id", nullable = false)) })
	public MUserRolesId getId() {
		return this.id;
	}

	public void setId(MUserRolesId id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Long getVersion() {
		return this.version;
	}

	public void setVersion(Long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false, insertable = false, updatable = false)
	public MRole getMRole() {
		return this.MRole;
	}

	public void setMRole(MRole MRole) {
		this.MRole = MRole;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false, insertable = false, updatable = false)
	public MUser getMUser() {
		return this.MUser;
	}

	public void setMUser(MUser MUser) {
		this.MUser = MUser;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by", nullable = false)
	public long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "nid", unique = true, nullable = false)
	public Serializable getNid() {
		return this.nid;
	}

	public void setNid(Serializable nid) {
		this.nid = nid;
	}

	@Column(name = "status", nullable = false, length = 1)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

}
